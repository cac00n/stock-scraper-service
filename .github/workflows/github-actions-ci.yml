name: CI Pipeline
run-name: Running Github Actions CI  ðŸš€
on: [pull_request]
jobs:
  Run-Package-Installation:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
     - name: Install Python
       uses: actions/setup-python@v4
       # see details (matrix, python-version, python-version-file, etc.)
       # https://github.com/actions/setup-python
       with:
         python-version: "3.11"
     - name: Install poetry
       uses: snok/install-poetry@v1
     - name: Install the project dependencies
       run: make install
     - uses: actions/cache@v3
       name: Define a cache for the virtual environment based on the dependencies lock file
       with:
         path: ./.venv
         key: venv-${{ hashFiles('poetry.lock') }}

  Run-Python-Linting:
    runs-on: ubuntu-latest
    needs: Run-Package-Installation
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Run all linting
        run: make lint

  Run-Python-Testing:
    runs-on: ubuntu-latest
    needs: Run-Package-Installation
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Run all tests
        run: make test

